raw `
Common_EventScript_PkmnCenterJack_Companion_Stuff::
	msgbox gText_PkmnCenterJack_GotPokemonQuestions, MSGBOX_DEFAULT
	multichoice 16, 0, MULTI_COMPANION_OPTIONS, 0
	copyvar VAR_TEMP_1, VAR_RESULT
	switch VAR_TEMP_1
	case 0, Common_EventScript_PkmnCenterJack_Companion_Get_Trainer_Password
	case 4, Common_EventScript_PkmnCenterJack
	case MULTI_B_PRESSED, Common_EventScript_PkmnCenterJack
	end

Common_EventScript_PkmnCenterJack_TeachMove::
	lock
	faceplayer
	bufferpartymonnick 0, 0
	msgbox Text_IVChecker_1, MSGBOX_DEFAULT
	specialvar VAR_RESULT, GetHpIV
	buffernumberstring 0, VAR_RESULT
	specialvar VAR_RESULT, GetAtkIV
	buffernumberstring 1, VAR_RESULT
	specialvar VAR_RESULT, GetDefIV
	buffernumberstring 2, VAR_RESULT
	msgbox Text_IVChecker_2, MSGBOX_DEFAULT
	specialvar VAR_RESULT, GetSpAtkIV
	buffernumberstring 0, VAR_RESULT
	specialvar VAR_RESULT, GetSpDefIV
	buffernumberstring 1, VAR_RESULT
	specialvar VAR_RESULT, GetSpeedIV
	buffernumberstring 2, VAR_RESULT
	msgbox Text_IVChecker_3, MSGBOX_DEFAULT
	release
	end

Common_EventScript_PkmnCenterJack_ComeBackAnytime::
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
    end
	
Common_EventScript_PkmnCenterJack_NoEnoughBadges::
	msgbox gText_PkmnCenterJack_CantTeachMoves, MSGBOX_DEFAULT
	releaseall
    end

@Start a Random Battle	
Common_EventScript_PkmnCenterJack_StartARandomBattle::
	msgbox Common_PkmnCenterJack_Text_MockBattle, MSGBOX_DEFAULT
	waitmessage
	multichoice 0, 0, MULTI_MOCK_BATTLE_OPTIONS, 0
	switch VAR_RESULT
    case 0, Common_EventScript_PkmnCenterJack_StartARandomBattle_Easy
	case 1, Common_EventScript_PkmnCenterJack_StartARandomBattle_Medium
    case 2, Common_EventScript_PkmnCenterJack_StartARandomBattle_Hard
	case 3, Common_EventScript_PkmnCenterJack_StartARandomBattle_PSS
	case 4, Common_EventScript_PkmnCenterJack
	case MULTI_B_PRESSED, Common_EventScript_PkmnCenterJack
	end
	
Common_EventScript_PkmnCenterJack_StartARandomBattle_Easy::
	msgbox Common_PkmnCenterJack_Text_MockBattle_Easy, MSGBOX_DEFAULT
	trainerbattle_no_intro TRAINER_NURSE_KIRSTEN, Common_PkmnCenterJack_Text_MockBattle_Defeat
	special HealPlayerParty
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
    end
	
Common_EventScript_PkmnCenterJack_StartARandomBattle_Medium::
	msgbox Common_PkmnCenterJack_Text_MockBattle_Normal, MSGBOX_DEFAULT
	trainerbattle_no_intro TRAINER_NURSE_SACHIKO, Common_PkmnCenterJack_Text_MockBattle_Defeat
	special HealPlayerParty
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
    end
	
Common_EventScript_PkmnCenterJack_StartARandomBattle_Hard::
	msgbox Common_PkmnCenterJack_Text_MockBattle_Hard, MSGBOX_DEFAULT
	trainerbattle_no_intro TRAINER_NURSE_SHERY, Common_PkmnCenterJack_Text_MockBattle_Defeat
	special HealPlayerParty
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
    end

Common_EventScript_PkmnCenterJack_StartARandomBattle_PSS::
	msgbox Common_PkmnCenterJack_Text_MockBattle_PSS, MSGBOX_DEFAULT
	trainerbattle_no_intro TRAINER_PSS_TRAINER, Common_PkmnCenterJack_Text_MockBattle_Defeat
	special HealPlayerParty
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
    end

@Rate Nickname
Common_EventScript_PkmnCenterJack_NameRater_ChooseMonToRate::
	msgbox Common_PkmnCenterJack_Text_CritiqueWhichMonNickname, MSGBOX_DEFAULT
	special ChoosePartyMon
	waitstate
	compare VAR_0x8004, 255
	goto_if_ne Common_EventScript_PkmnCenterJack_NameRater_RateMonNickname
	compare VAR_0x8004, 255
	goto_if_eq Common_EventScript_PkmnCenterJack_NameRater_DeclineNameRate
	end

Common_EventScript_PkmnCenterJack_NameRater_DeclineNameRate::
	msgbox Common_PkmnCenterJack_Text_DoVisitAgain, MSGBOX_DEFAULT
	release
	end

Common_EventScript_PkmnCenterJack_NameRater_RateMonNickname::
	specialvar VAR_RESULT, ScriptGetPartyMonSpecies
	compare VAR_RESULT, SPECIES_EGG
	goto_if_eq Common_EventScript_PkmnCenterJack_NameRater_CantRateEgg
	special BufferMonNickname
	msgbox Common_PkmnCenterJack_Text_FineNameSuggestBetterOne, MSGBOX_YESNO
	compare VAR_RESULT, YES
	goto_if_eq Common_EventScript_PkmnCenterJack_NameRater_ChangeNickname
	compare VAR_RESULT, NO
	goto_if_eq Common_EventScript_PkmnCenterJack_NameRater_DeclineNameRate
	end

Common_EventScript_PkmnCenterJack_NameRater_CantRateEgg::
	msgbox Common_PkmnCenterJack_Text_ThatIsMerelyAnEgg, MSGBOX_DEFAULT
	release
	end

Common_EventScript_PkmnCenterJack_NameRater_ChangeNickname::
	msgbox Common_PkmnCenterJack_Text_WhatShallNewNameBe, MSGBOX_DEFAULT
	call Common_EventScript_NameReceivedPartyMon
	specialvar VAR_RESULT, TryPutNameRaterShowOnTheAir
	special BufferMonNickname
	compare VAR_RESULT, TRUE
	goto_if_eq Common_EventScript_PkmnCenterJack_NameRater_NewNameDifferent
	msgbox Common_PkmnCenterJack_Text_NameNoDifferentYetSuperior, MSGBOX_DEFAULT
	release
	end

Common_EventScript_PkmnCenterJack_NameRater_NewNameDifferent::
	msgbox Common_PkmnCenterJack_Text_MonShallBeKnownAsName, MSGBOX_DEFAULT
	release
	end

@Move Deleter
Common_EventScript_PkmnCenterJack_MoveDeleter_ChooseMonAndMoveToForget::
	msgbox Common_PkmnCenterJack_Text_WhichMonShouldForget, MSGBOX_DEFAULT
	special ChoosePartyMon
	waitstate
	compare VAR_0x8004, 255
	goto_if_eq Common_EventScript_PkmnCenterJack_MoveDeleter_ComeAgain
	special IsSelectedMonEgg
	compare VAR_RESULT, TRUE
	goto_if_eq Common_EventScript_PkmnCenterJack_MoveDeleter_EggCantForgetMoves
	special GetNumMovesSelectedMonHas
	compare VAR_RESULT, 1
	goto_if_eq Common_EventScript_PkmnCenterJack_MoveDeleter_MonOnlyKnowsOneMove
	msgbox Common_PkmnCenterJack_Text_WhichMoveShouldBeForgotten, MSGBOX_DEFAULT
	fadescreen FADE_TO_BLACK
	special MoveDeleterChooseMoveToForget
	fadescreen FADE_FROM_BLACK
	compare VAR_0x8005, MAX_MON_MOVES
	goto_if_eq Common_EventScript_PkmnCenterJack_MoveDeleter_ChooseMonAndMoveToForget
	special BufferMoveDeleterNicknameAndMove
	msgbox Common_PkmnCenterJack_Text_MonsMoveShouldBeForgotten, MSGBOX_YESNO
	switch VAR_RESULT
	case YES, Common_EventScript_PkmnCenterJack_MoveDeleter_TryForgetMove
	case NO, Common_EventScript_PkmnCenterJack_MoveDeleter_ComeAgain
	releaseall
	end

Common_EventScript_PkmnCenterJack_MoveDeleter_TryForgetMove::
	special IsLastMonThatKnowsSurf
	compare VAR_RESULT, TRUE
	goto_if_eq Common_EventScript_PkmnCenterJack_MoveDeleter_LastMonWithSurf
	special MoveDeleterForgetMove
	playfanfare MUS_MOVE_DELETED
	waitfanfare
	msgbox Common_PkmnCenterJack_Text_MonHasForgottenMove, MSGBOX_DEFAULT
	releaseall
	end

Common_EventScript_PkmnCenterJack_MoveDeleter_MonOnlyKnowsOneMove::
	special BufferMoveDeleterNicknameAndMove
	msgbox Common_PkmnCenterJack_Text_MonOnlyKnowsOneMove, MSGBOX_DEFAULT
	releaseall
	end

Common_EventScript_PkmnCenterJack_MoveDeleter_EggCantForgetMoves::
	msgbox Common_PkmnCenterJack_Text_EggCantForgetMoves, MSGBOX_DEFAULT
	releaseall
	end

Common_EventScript_PkmnCenterJack_MoveDeleter_ComeAgain::
	msgbox Common_PkmnCenterJack_Text_ComeAgain, MSGBOX_DEFAULT
	releaseall
	end

Common_EventScript_PkmnCenterJack_MoveDeleter_LastMonWithSurf::
	special BufferMoveDeleterNicknameAndMove
	msgbox Common_PkmnCenterJack_Text_CantForgetSurf, MSGBOX_DEFAULT
	releaseall
	end
	
//------------------------------------------------------------------------------
	
Common_EventScript_PkmnCenterJack_MoveReminder_ComeBackAnytime:: @ 8201452
	msgbox gText_PkmnCenterJack_ComeBackAnytime, MSGBOX_DEFAULT
	releaseall
	end

`

//Blue Nurse Stuff
script Common_EventScript_PkmnCenterJack{
	lockall
	msgbox(gText_PkmnCenterJack_GotPokemonQuestions, MSGBOX_DEFAULT)
	scrollingmultichoice(SCROLLING_BLUE_NURSE_OPTIONS, 0, 0, 6, TRUE)
	switch(var(VAR_RESULT)){
		case 0:
			goto(Common_EventScript_PkmnCenterJack_Change_Costume)
		break
		case 1:
			goto(Common_EventScript_PkmnCenterJack_StartARandomBattle)
		break
		case 2:
			goto(Common_EventScript_PkmnCenterJack_NameRater_ChooseMonToRate)
		break
		case 3:
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		break
		case 4:
			goto(Common_EventScript_PkmnCenterJack_WonderTrade)
		break
		case 5:
			goto(Common_EventScript_PkmnCenterJack_Lower_Difficulty)
		break
		case 6:
		default:
			goto(Common_EventScript_PkmnCenterJack_ComeBackAnytime)
		break
	}
}

script Common_EventScript_PkmnCenterJack_Clear_Move_Tutor_Data{
	setvar(VAR_SHOP_MONEY_TYPE, MART_MONEY_TYPE_NORMAL)
	setvar(VAR_PARTY_MENU_TUTOR_STATE, MOVE_TUTOR_LEVEL_UP_MOVES)
	clearflag(FLAG_IS_MOVE_TUTOR)
	return
}

script Common_EventScript_PkmnCenterJack_Move_Learner{
	call(Common_EventScript_PkmnCenterJack_Clear_Move_Tutor_Data)
	msgbox(gText_PkmnCenterJack_TeachMoves, MSGBOX_DEFAULT)
	scrollingmultichoice(SCROLLING_BLUE_NURSE_MOVE_LEARN, 0, 0, 5, TRUE)
	switch(var(VAR_RESULT)){
		case 0:
			goto(Common_EventScript_PkmnCenterJack_MoveDeleter_ChooseMonAndMoveToForget)
		break
		case 1:
			goto(Common_EventScript_PkmnCenterJack_EggMoveTutor_Price)
		break
		case 2:
			goto(Common_EventScript_PkmnCenterJack_TutorMoveTutor_Price)
		break
		case 3:
			goto(Common_EventScript_PkmnCenterJack_TmMoveTutor_Price)
		break
		case 5:
		default:
			goto(Common_EventScript_PkmnCenterJack_ComeBackAnytime)
		break
	}
}


script Common_EventScript_PkmnCenterJack_Lower_Difficulty{
	if(var(VAR_DIFFICULTY) != DIFFICULTY_EASY){
		msgbox(format("Do you want to lower the difficulty?"), MSGBOX_YESNO)
		switch(var(VAR_RESULT)){
			case YES:
				if(var(VAR_DIFFICULTY) == DIFFICULTY_HARD){
					setvar(VAR_DIFFICULTY, DIFFICULTY_NORMAL)
					playfanfare(MUS_OBTAIN_ITEM)
					message(format("The difficulty became Normal."))
				}
				else{
					setvar(VAR_DIFFICULTY, DIFFICULTY_EASY)
					playfanfare(MUS_OBTAIN_ITEM)
					message(format("The difficulty became Easy."))
				}
				waitmessage
				waitfanfare
				goto(Common_EventScript_PkmnCenterJack)
			break
			case NO:
			case MULTI_B_PRESSED:
			default:
				goto(Common_EventScript_PkmnCenterJack)
			break
		}
	}
	else{
		msgbox(format("You are already in the lowest difficulty!"))
		goto(Common_EventScript_PkmnCenterJack)
	}
    release
    end
}

script Common_EventScript_PkmnCenterJack_Change_Costume{
	lock
	faceplayer
	msgbox(format("What outfit do you want to use today?"), MSGBOX_DEFAULT)
	multichoice(16, 0, MULTI_COSTUMES, 0)
	copyvar(VAR_TEMP_1, VAR_RESULT)
	switch(var(VAR_RESULT)){
		case EMERALD_COSTUME:
		case RS_COSTUME:
		case FRLG_COSTUME:
		case RBY_COSTUME:
			copyvar(VAR_COSTUME_NUMBER, VAR_TEMP_1)
			msgbox(format("Come this way so you can change your outfit"), MSGBOX_DEFAULT)
			//Refreshes the map
			warp(MAP_LITTLEROOT_TOWN, 192, 192, 192)
		break
		case BW_COSTUME:
		case DP_COSTUME:
			checkplayergender
			if(var(VAR_RESULT) == GENDER_FEMALE){
				//Hilda Costume is yet to be added
				msgbox(format("Sorry but this costume has not been added to the game yet."), MSGBOX_DEFAULT)
			}
			else{
				copyvar(VAR_COSTUME_NUMBER, VAR_TEMP_1)
				//Refreshes the map
				msgbox(format("Come this way so you can change your outfit"), MSGBOX_DEFAULT)
				warp(MAP_LITTLEROOT_TOWN, 192, 192, 192)
			}
		break
		case NUM_COSTUMES:
		case MULTI_B_PRESSED:
			msgbox(format("Come back anytime you want to change outfits!"), MSGBOX_DEFAULT)
		break
	}
	releaseall
	end
}

//Wonder Trade
script Common_EventScript_PkmnCenterJack_WonderTrade{
	setvar(VAR_0x8008, INGAME_TRADE_SEEDOT)
	copyvar(VAR_0x8004, VAR_0x8008)
	specialvar(VAR_RESULT, GetInGameTradeSpeciesInfo)
	copyvar(VAR_0x8009, VAR_RESULT)
	
    checkitem(ITEM_WONDER_CHARM, 1)
    if(var(VAR_RESULT) == FALSE){
		setvar(VAR_SHOP_MONEY_TYPE, MART_MONEY_TYPE_BATTLE_POINTS) //Battle Points
		showmoneybox(0, 0, 0)
		msgbox(format("Do you want to try Wonder Trading, its only 5BP per try?"), MSGBOX_YESNO)
	}
	else{
		msgbox(format("Do you want to try Wonder Trading?, its free for you"), MSGBOX_YESNO)
	}

	if(var(VAR_RESULT) == NO){
		goto(Common_EventScript_PkmnCenterJack_WonderTrade_Cancel)
	}
	else{
		// Check if the player has enough bp		
		checkitem(ITEM_WONDER_CHARM, 1)
		if(var(VAR_RESULT) == FALSE){
			checkmoney(WONDER_TRADE_PRICE, 0)
		}

		if(var(VAR_RESULT) == 0) {
			msgbox(format("But it seems you can't afford wonder trading right now.\pPlease come back when you have atleast 5BP."), MSGBOX_DEFAULT)
			setvar(VAR_SHOP_MONEY_TYPE, 0)
		}
		else{
			special(ChoosePartyMon)
			waitstate
			copyvar(VAR_0x800A, VAR_0x8004)
			//No Pokemon Chosen
			if(var(VAR_0x8004) == 255){
				goto(Common_EventScript_PkmnCenterJack_WonderTrade_Cancel)
			}
			copyvar(VAR_0x8005, VAR_0x800A)
			specialvar(VAR_RESULT, GetTradeSpecies)
			copyvar(VAR_0x800B, VAR_RESULT)
			compare(VAR_RESULT, VAR_0x8009)
			copyvar(VAR_0x8004, VAR_0x8008)
			copyvar(VAR_0x8005, VAR_0x800A)
			special(CreateInGameWonderTradePokemon)
			special(DoInGameTradeScene)
			waitstate
			special(DestroyFollower)
			bufferspeciesname (0, VAR_0x8009)
			playse(SE_SHOP)
			
			checkitem(ITEM_WONDER_CHARM, 1)
			if(var(VAR_RESULT) == FALSE){
				removemoney(WONDER_TRADE_PRICE, 0)
			}
			
			clearflag(FLAG_FOLLOWER_IS_ENABLED)
			msgbox(format("Please take care of your new Pokémon."), MSGBOX_DEFAULT)
		}
		checkitem(ITEM_WONDER_CHARM, 1)
		if(var(VAR_RESULT) == FALSE){
			hidemoneybox
		}
	}
	release
	end
}
	
script Common_EventScript_PkmnCenterJack_WonderTrade_Cancel{
	msgbox(format("All right. Let me know if you want to give it a try."), MSGBOX_DEFAULT)
	hidemoneybox
	goto(Common_EventScript_PkmnCenterJack)
}

//Egg Tutor 
const EGG_TUTOR_MOVE_BP_PRICE = 4
script Common_EventScript_PkmnCenterJack_EggMoveTutor_Price{
	setvar(VAR_PARTY_MENU_TUTOR_STATE, MOVE_TUTOR_EGG_MOVES)
	setflag(FLAG_IS_MOVE_TUTOR)
	if(var(VAR_NUM_BADGES) >= 6){
		setvar(VAR_SHOP_MONEY_TYPE, MART_MONEY_TYPE_BATTLE_POINTS) //Battle Points
		showmoneybox(0, 0, 0)
		msgbox(format("Learning an Egg move will cost you 4 Battle Points, do you want to continue?"), MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES){
			//Check the BP
			checkmoney(EGG_TUTOR_MOVE_BP_PRICE, 0)
			if(var(VAR_RESULT) == YES){
				hidemoneybox
				goto(Common_EventScript_PkmnCenterJack_Egg_TutorMoveTutor_ChooseMon)
			}
			else{
				//No enough BP
				hidemoneybox
				msgbox(format("It seems like you don't have enough Battle Points!"), MSGBOX_DEFAULT)
				goto(Common_EventScript_PkmnCenterJack_Move_Learner)
			}
		}
		else{
			//Chose I don't want to teach any move
			hidemoneybox
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
	}
	else{
		msgbox(format("Sorry, you need 6 badges to use this service!"), MSGBOX_DEFAULT)
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
}

script Common_EventScript_PkmnCenterJack_Egg_TutorMoveTutor_ChooseMon{
	msgbox(format("Which Pokémon should I teach a move?"), MSGBOX_DEFAULT)
	special(ChooseMonForMoveRelearner)
	waitstate
	if(var(VAR_0x8004) == 255){//You Chose Cancel
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
	else{
		special(IsSelectedMonEgg)
		if(var(VAR_RESULT) == YES){
			msgbox(format("Sorry, I can't teach moves to an Egg!"), MSGBOX_DEFAULT)
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
		else{
			if(var(VAR_0x8005) == 0){
				msgbox(format("Sorry, this Pokémon can't learn any Tutor Move!"), MSGBOX_DEFAULT)
			}
			else{
				//Start Teaching Moves
				msgbox(format("Which move should I teach it?"), MSGBOX_DEFAULT)
				special(TeachMoveRelearnerMove)
				waitstate
				if(var(VAR_0x8004) == 0){
					goto(Common_EventScript_PkmnCenterJack_Egg_TutorMoveTutor_ChooseMon)
				}
				else{
					playse(SE_SHOP)
					removemoney(EGG_TUTOR_MOVE_BP_PRICE, 0)
					call(Common_EventScript_PkmnCenterJack_Clear_Move_Tutor_Data)
					msgbox(format("Your Pokémon was able to learn the move successfuly, please continue to use our services!"), MSGBOX_DEFAULT)
					releaseall
					end
				}
			}
		}
	}
}

//Move Tutor
const TUTOR_MOVE_BP_PRICE   = 6
script Common_EventScript_PkmnCenterJack_TutorMoveTutor_Price{
	setvar(VAR_PARTY_MENU_TUTOR_STATE, MOVE_TUTOR_MOVES)
	setflag(FLAG_IS_MOVE_TUTOR)
	if(var(VAR_NUM_BADGES) >= 9){
		setvar(VAR_SHOP_MONEY_TYPE, MART_MONEY_TYPE_BATTLE_POINTS) //Battle Points
		showmoneybox(0, 0, 0)
		msgbox(format("Learning a Tutor move will cost you 6 Battle Points, do you want to continue?"), MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES){
			//Check the BP
			checkmoney(TUTOR_MOVE_BP_PRICE, 0)
			if(var(VAR_RESULT) == YES){
				hidemoneybox
				goto(Common_EventScript_PkmnCenterJack_TutorMoveTutor_ChooseMon)
			}
			else{
				//No enough BP
				hidemoneybox
				msgbox(format("It seems like you don't have enough Battle Points!"), MSGBOX_DEFAULT)
				goto(Common_EventScript_PkmnCenterJack_Move_Learner)
			}
		}
		else{
			//Chose I don't want to teach any move
			hidemoneybox
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
	}
	else{
		msgbox(format("Sorry, you need 9 badges to use this service!"), MSGBOX_DEFAULT)
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
}

script Common_EventScript_PkmnCenterJack_TutorMoveTutor_ChooseMon{
	msgbox(format("Which Pokémon should I teach a move?"), MSGBOX_DEFAULT)
	special(ChooseMonForMoveRelearner)
	waitstate
	if(var(VAR_0x8004) == 255){//You Chose Cancel
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
	else{
		special(IsSelectedMonEgg)
		if(var(VAR_RESULT) == YES){
			msgbox(format("Sorry, I can't teach moves to an Egg!"), MSGBOX_DEFAULT)
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
		else{
			if(var(VAR_0x8005) == 0){
				msgbox(format("Sorry, this Pokémon can't learn any Tutor Move!"), MSGBOX_DEFAULT)
			}
			else{
				//Start Teaching Moves
				msgbox(format("Which move should I teach it?"), MSGBOX_DEFAULT)
				special(TeachMoveRelearnerMove)
				waitstate
				if(var(VAR_0x8004) == 0){
					goto(Common_EventScript_PkmnCenterJack_TutorMoveTutor_ChooseMon)
				}
				else{
					playse(SE_SHOP)
					removemoney(TUTOR_MOVE_BP_PRICE, 0)
					call(Common_EventScript_PkmnCenterJack_Clear_Move_Tutor_Data)
					msgbox(format("Your Pokémon was able to learn the move successfuly, please continue to use our services!"), MSGBOX_DEFAULT)
					releaseall
					end
				}
			}
		}
	}
}

//TM Tutor 
const TM_TUTOR_MOVE_BP_PRICE = 8
script Common_EventScript_PkmnCenterJack_TmMoveTutor_Price{
	setvar(VAR_PARTY_MENU_TUTOR_STATE, MOVE_TUTOR_TM_MOVES)
	setflag(FLAG_IS_MOVE_TUTOR)
	if(var(VAR_NUM_BADGES) >= 12){
		setvar(VAR_SHOP_MONEY_TYPE, MART_MONEY_TYPE_BATTLE_POINTS) //Battle Points
		showmoneybox(0, 0, 0)
		msgbox(format("Learning a TM move will cost you 8 Battle Points, do you want to continue?"), MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES){
			//Check the BP
			checkmoney(TM_TUTOR_MOVE_BP_PRICE, 0)
			if(var(VAR_RESULT) == YES){
				hidemoneybox
				goto(Common_EventScript_PkmnCenterJack_TM_TutorMoveTutor_ChooseMon)
			}
			else{
				//No enough BP
				hidemoneybox
				msgbox(format("It seems like you don't have enough Battle Points!"), MSGBOX_DEFAULT)
				goto(Common_EventScript_PkmnCenterJack_Move_Learner)
			}
		}
		else{
			//Chose I don't want to teach any move
			hidemoneybox
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
	}
	else{
		msgbox(format("Sorry, you need 12 badges to use this service!"), MSGBOX_DEFAULT)
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
}

script Common_EventScript_PkmnCenterJack_TM_TutorMoveTutor_ChooseMon{
	msgbox(format("Which Pokémon should I teach a move?"), MSGBOX_DEFAULT)
	special(ChooseMonForMoveRelearner)
	waitstate
	if(var(VAR_0x8004) == 255){//You Chose Cancel
		goto(Common_EventScript_PkmnCenterJack_Move_Learner)
	}
	else{
		special(IsSelectedMonEgg)
		if(var(VAR_RESULT) == YES){
			msgbox(format("Sorry, I can't teach moves to an Egg!"), MSGBOX_DEFAULT)
			goto(Common_EventScript_PkmnCenterJack_Move_Learner)
		}
		else{
			if(var(VAR_0x8005) == 0){
				msgbox(format("Sorry, this Pokémon can't learn any Tutor Move!"), MSGBOX_DEFAULT)
			}
			else{
				//Start Teaching Moves
				msgbox(format("Which move should I teach it?"), MSGBOX_DEFAULT)
				special(TeachMoveRelearnerMove)
				waitstate
				if(var(VAR_0x8004) == 0){
					goto(Common_EventScript_PkmnCenterJack_TM_TutorMoveTutor_ChooseMon)
				}
				else{
					playse(SE_SHOP)
					removemoney(TM_TUTOR_MOVE_BP_PRICE, 0)
					call(Common_EventScript_PkmnCenterJack_Clear_Move_Tutor_Data)
					msgbox(format("Your Pokémon was able to learn the move successfuly, please continue to use our services!"), MSGBOX_DEFAULT)
					releaseall
					end
				}
			}
		}
	}
}

