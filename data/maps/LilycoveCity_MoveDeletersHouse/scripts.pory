raw `
.set LOCALID_MOVE_DELETER, 1

LilycoveCity_MoveDeletersHouse_MapScripts:: @ 821EA0A
	.byte 0

LilycoveCity_MoveDeletersHouse_EventScript_MoveDeleter:: @ 821EA0B
	lockall
	applymovement LOCALID_MOVE_DELETER, Common_Movement_FacePlayer
	waitmovement 0
	msgbox LilycoveCity_MoveDeletersHouse_Text_ICanMakeMonForgetMove, MSGBOX_YESNO
	switch VAR_RESULT
	case YES, LilycoveCity_MoveDeletersHouse_EventScript_ChooseMonAndMoveToForget
	case NO, LilycoveCity_MoveDeletersHouse_EventScript_ComeAgain
	releaseall
	end
		
LilycoveCity_MoveDeletersHouse_EventScript_WaterStarter_Come_Again::
	msgbox LilycoveCity_MoveDeletersHouse_Text_ComeAgain_Starter, MSGBOX_DEFAULT
	release
	end
	
LilycoveCity_MoveDeletersHouse_EventScript_WaterStarter_Decline::
	msgbox LilycoveCity_MoveDeletersHouse_Text_Starter_Declined, MSGBOX_DEFAULT
	release
	end
		
LilycoveCity_MoveDeletersHouse_EventScript_ChooseMonAndMoveToForget:: @ 821EA3B
	msgbox LilycoveCity_MoveDeletersHouse_Text_WhichMonShouldForget, MSGBOX_DEFAULT
	special ChoosePartyMon
	waitstate
	compare VAR_0x8004, 255
	goto_if_eq LilycoveCity_MoveDeletersHouse_EventScript_ComeAgain
	special IsSelectedMonEgg
	compare VAR_RESULT, TRUE
	goto_if_eq LilycoveCity_MoveDeletersHouse_EventScript_EggCantForgetMoves
	special GetNumMovesSelectedMonHas
	compare VAR_RESULT, 1
	goto_if_eq LilycoveCity_MoveDeletersHouse_EventScript_MonOnlyKnowsOneMove
	msgbox LilycoveCity_MoveDeletersHouse_Text_WhichMoveShouldBeForgotten, MSGBOX_DEFAULT
	fadescreen FADE_TO_BLACK
	special MoveDeleterChooseMoveToForget
	fadescreen FADE_FROM_BLACK
	compare VAR_0x8005, MAX_MON_MOVES
	goto_if_eq LilycoveCity_MoveDeletersHouse_EventScript_ChooseMonAndMoveToForget
	special BufferMoveDeleterNicknameAndMove
	msgbox LilycoveCity_MoveDeletersHouse_Text_MonsMoveShouldBeForgotten, MSGBOX_YESNO
	switch VAR_RESULT
	case YES, LilycoveCity_MoveDeletersHouse_EventScript_TryForgetMove
	case NO, LilycoveCity_MoveDeletersHouse_EventScript_ComeAgain
	releaseall
	end

LilycoveCity_MoveDeletersHouse_EventScript_TryForgetMove:: @ 821EAB0
	special IsLastMonThatKnowsSurf
	compare VAR_RESULT, TRUE
	goto_if_eq LilycoveCity_MoveDeletersHouse_EventScript_LastMonWithSurf
	special MoveDeleterForgetMove
	playfanfare MUS_MOVE_DELETED
	waitfanfare
	msgbox LilycoveCity_MoveDeletersHouse_Text_MonHasForgottenMove, MSGBOX_DEFAULT
	releaseall
	end

LilycoveCity_MoveDeletersHouse_EventScript_MonOnlyKnowsOneMove:: @ 821EACF
	special BufferMoveDeleterNicknameAndMove
	msgbox LilycoveCity_MoveDeletersHouse_Text_MonOnlyKnowsOneMove, MSGBOX_DEFAULT
	releaseall
	end

LilycoveCity_MoveDeletersHouse_EventScript_EggCantForgetMoves:: @ 821EADC
	msgbox LilycoveCity_MoveDeletersHouse_Text_EggCantForgetMoves, MSGBOX_DEFAULT
	releaseall
	end

LilycoveCity_MoveDeletersHouse_EventScript_ComeAgain:: @ 821EAE6
	msgbox LilycoveCity_MoveDeletersHouse_Text_ComeAgain, MSGBOX_DEFAULT
	releaseall
	end

LilycoveCity_MoveDeletersHouse_EventScript_LastMonWithSurf:: @ 821EAF0
	special BufferMoveDeleterNicknameAndMove
	msgbox LilycoveCity_MoveDeletersHouse_Text_CantForgetSurf, MSGBOX_DEFAULT
	releaseall
	end

LilycoveCity_MoveDeletersHouse_Text_ICanMakeMonForgetMove: @ 821EAFD
	.string "Uh…\n"
	.string "Oh, yes, I'm the Move Deleter.\p"
	.string "I can make Pokémon forget their moves.\p"
	.string "Would you like me to do that?$"
	
LilycoveCity_MoveDeletersHouse_Text_ThreeShards:
	.string "If you have 2 Blue Shards I can\n"
	.string "give you a good Pokémon.$"
	
LilycoveCity_MoveDeletersHouse_Text_Question:
	.string "Are those Blue Shards?\p"
	.string "Do you want to trade them\n"
	.string "for one of my Pokémon?$"
	
LilycoveCity_MoveDeletersHouse_Text_Chose_Well:
	.string "Please chose one of my Pokémon.$"
	
LilycoveCity_MoveDeletersHouse_Text_Starter_Declined:
	.string "Oh well, come again if you change\n"
	.string "your mind.$"
	
LilycoveCity_MoveDeletersHouse_Text_ComeAgain_Starter:
	.string "Come again if you want another\n"
	.string "one.$"

LilycoveCity_MoveDeletersHouse_Text_WhichMonShouldForget: @ 821EB65
	.string "Which Pokémon should forget a move?$"

LilycoveCity_MoveDeletersHouse_Text_WhichMoveShouldBeForgotten: @ 821EB89
	.string "Which move should be forgotten?$"

LilycoveCity_MoveDeletersHouse_Text_MonOnlyKnowsOneMove: @ 821EBA9
	.string "{STR_VAR_1} knows only one move\n"
	.string "so it can't be forgotten…$"

LilycoveCity_MoveDeletersHouse_Text_MonsMoveShouldBeForgotten: @ 821EBDA
	.string "Hm! {STR_VAR_1}'s {STR_VAR_2}?\n"
	.string "That move should be forgotten?$"

LilycoveCity_MoveDeletersHouse_Text_MonHasForgottenMove: @ 821EC06
	.string "It worked to perfection!\p"
	.string "{STR_VAR_1} has forgotten\n"
	.string "{STR_VAR_2} completely.$"

LilycoveCity_MoveDeletersHouse_Text_ComeAgain: @ 821EC3F
	.string "Come again if there are moves that\n"
	.string "need to be forgotten.$"

LilycoveCity_MoveDeletersHouse_Text_EggCantForgetMoves: @ 821EC78
	.string "What?\n"
	.string "No Egg should know any moves.$"

LilycoveCity_MoveDeletersHouse_Text_CantForgetSurf: @ 821EC9C
	.string "Hm!\p"
	.string "Your {STR_VAR_1} doesn't seem willing\n"
	.string "to forget Surf.$"

`
script LilycoveCity_MoveDeletersHouse_EventScript_WaterStarter{ 
	lock
	faceplayer
	msgbox(LilycoveCity_MoveDeletersHouse_Text_ThreeShards, MSGBOX_DEFAULT)
	checkitem(ITEM_BLUE_SHARD, 2)
	if(var(VAR_RESULT) == TRUE){
		playse(SE_PIN)
		applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
		waitmovement(0)
		applymovement(VAR_LAST_TALKED, Common_Movement_Delay48)
		waitmovement(0)
		msgbox(LilycoveCity_MoveDeletersHouse_Text_Question, MSGBOX_YESNO)
		if(var(VAR_RESULT) == NO){
			goto(LilycoveCity_MoveDeletersHouse_EventScript_WaterStarter_Decline)
		}
		getpartysize
		if(var(VAR_RESULT) == PARTY_SIZE){
			goto(RustboroCity_DevonCorp_2F_EventScript_No_Space)
		}		
		removeitem(ITEM_BLUE_SHARD, 2)
		playfanfare(MUS_OBTAIN_ITEM)
		waitfanfare
		random(9)
		switch(var(VAR_RESULT)){
			case 0:
				bufferspeciesname(1, SPECIES_SQUIRTLE)
				if(flag(FLAG_GOT_BLASTOISE_MEGA_STONE) || !flag(FLAG_GOT_BADGE_11)){
					givemon(SPECIES_SQUIRTLE, 10, ITEM_NONE)
				}
				else{
					givemon(SPECIES_SQUIRTLE, 30, ITEM_BLASTOISINITE)
					setflag(FLAG_GOT_BLASTOISE_MEGA_STONE)
				}
				break
			case 1:
				bufferspeciesname(1, SPECIES_TOTODILE)
				givemon(SPECIES_TOTODILE, 10, ITEM_NONE)
				break
			case 2:
				bufferspeciesname(1, SPECIES_MUDKIP)
				if(flag(FLAG_GOT_SABLEYE_MEGA_STONE) || !flag(FLAG_GOT_BADGE_11))
				{
					givemon(SPECIES_MUDKIP, 10, ITEM_NONE)
				}
				else{ 
					givemon(SPECIES_MUDKIP, 30, ITEM_SWAMPERTITE)
					setflag(FLAG_GOT_SWAMPERT_MEGA_STONE)
				}
				break
			case 3:
				bufferspeciesname(1, SPECIES_PIPLUP)
				givemon(SPECIES_PIPLUP, 10, ITEM_NONE)
				break
			case 4:
				bufferspeciesname(1, SPECIES_OSHAWOTT)
				givemon(SPECIES_OSHAWOTT, 10, ITEM_NONE)
				break
			case 5:
				bufferspeciesname(1, SPECIES_FROAKIE)
				givemon(SPECIES_FROAKIE, 10, ITEM_NONE)
				break
			case 6:
				bufferspeciesname(1, SPECIES_POPPLIO)
				givemon(SPECIES_POPPLIO, 10, ITEM_NONE)
				break
			case 7:
				bufferspeciesname(1, SPECIES_SOBBLE)
				givemon(SPECIES_SOBBLE, 10, ITEM_NONE)
				break
			case 8:
				bufferspeciesname(1, SPECIES_QUAXLY)
				givemon(SPECIES_QUAXLY, 10, ITEM_NONE)
				break
		}
		message(format("{PLAYER} received {STR_VAR_2} from the Old Man.{PAUSE_UNTIL_PRESS}"))
		waitmessage
		msgbox(LilycoveCity_MoveDeletersHouse_Text_ComeAgain_Starter, MSGBOX_DEFAULT)
	}
	release
	end
}
	

